#validation_messages_protected_branch= error_messages_for 'protected_branch'

.box
  %p= f.text_field :path, required: true, size: 65, label: l(:label_branch_path)
  %p= f.select :permissions, options_for_select(RepositoryProtectedBranche::VALID_PERMS, @protected_branch.permissions), required: true, label: :label_permissions

  -#= hidden_field_tag "repository_protected_branche[user_list][]", ""
  = hidden_field_tag "repository_protected_branch[user_list][]", ""

  %p
    -#%label{ for: "repository_protected_branche[user_list]" }= l(:label_user_list) + ' :'
    %label{ for: "repository_protected_branch[user_list]" }= l(:label_user_list) + ' :'

  %ul{ id: 'user_list' }
    - if @protected_branch.user_list.any?
      - @protected_branch.user_list.each do |item|
        %li= item

:javascript
  var user_list = #{raw @protected_branch.available_users.to_json};

  function loadTagIt(target){

    $('#' + target).gtagit({
      autocomplete: {source: function(request, resolve) {
          // fetch new values with request.resolve
          resolve(user_list);
        }
      },
      afterTagAdded: function(event, ui) {
        var value = ui.tag.children('input:hidden').val();
        user_list = user_list.filter(function(v) { return v != value;});
        $(".ui-dialog-content").dialog("option", "position", ['center', 'center']).animate('slow');
      },
      afterTagRemoved: function(event, ui) {
        var value = ui.tag.children('input:hidden').val();
        user_list.push(value);
        $(".ui-dialog-content").dialog("option", "position", ['center', 'center']).animate('slow');
      },
      showAutocompleteOnFocus: true,
      placeholderText: '+ add user',
      allowDuplicates: false,
      caseSensitive: false,
      //fieldName: 'repository_protected_branche[' + target + '][]',
      fieldName: 'repository_protected_branch[' + target + '][]',
    });

  }

  $(document).ready(function() {
    loadTagIt('user_list');
  });
