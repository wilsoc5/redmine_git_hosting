/ Gitolite Config File
- gitolite_config_file          = RedmineGitHosting::Config.get_setting(:gitolite_config_file)
- gitolite_config_has_admin_key = RedmineGitHosting::Config.get_setting(:gitolite_config_has_admin_key, true)
- gitolite_identifier_prefix    = RedmineGitHosting::Config.get_setting(:gitolite_identifier_prefix)

- disable_button = (gitolite_config_file == RedmineGitHosting::Config::GITOLITE_DEFAULT_CONFIG_FILE ? true : false)

%h3= l(:label_gitolite_config_file)

%p
  %label= l(:label_gitolite_config_file)
  = text_field_tag 'settings[gitolite_config_file]', "./#{gitolite_config_file}", size: 60

%p
  %label= l(:label_gitolite_config_has_admin_key)
  = bootstrap_switch_tag do
    = hidden_field_tag 'settings[gitolite_config_has_admin_key]', "#{disable_button}"
    = check_box_tag 'settings[gitolite_config_has_admin_key]', gitolite_config_has_admin_key, gitolite_config_has_admin_key, {disabled: disable_button}

%p
  %label= l(:label_gitolite_identifier_prefix)
  = hidden_field_tag "settings[gitolite_identifier_prefix]", gitolite_identifier_prefix if disable_button
  = text_field_tag "settings[gitolite_identifier_prefix]", gitolite_identifier_prefix, size: 60, disabled: disable_button
  %br
  %em= l(:label_gitolite_identifier_prefix_desc)

%br

.git_hosting_access_box
  %h3= l(:label_current_access_patterns)

  %pre
    :preserve
      SSH Key : <em>#{gitolite_identifier_prefix}</em>admin@redmine_1394507971_600081.pub
      SSH Key : <em>#{gitolite_identifier_prefix}</em>bob@redmine_1394507971_600081.pub

      repo    repositories/test
        RW+                        = <em>#{gitolite_identifier_prefix}</em>admin <em>#{gitolite_identifier_prefix}</em>john
        RW                         = <em>#{gitolite_identifier_prefix}</em>bob alice
        R                          = <em>#{gitolite_identifier_prefix}</em>reporter mike gitweb
